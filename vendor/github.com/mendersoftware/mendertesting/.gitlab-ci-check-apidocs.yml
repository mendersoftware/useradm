# .gitlab-ci-check-apidocs.yml
#
# This gitlab-ci template validates Swagger API specification and
# triggers Mender API site rebuilds.
#
# The Mender API site rebuild is triggered automatically on production
# branches when there are changes to docs/*. Additionally, it can be
# manually triggered setting REBUILD_MENDER_API_DOCS to "true" when
# starting a pipeline.
#
# It assumes the documentation is in a docs/ folder.
#
# Add it to the project in hand through Gitlab's include functionality
#
# include:
#   - project: 'Northern.tech/Mender/mendertesting'
#     file: '.gitlab-ci-check-apidocs.yml'
#

stages:
  - test

test:apidocs:verify-yaml:
  stage: test
  except:
    - /^saas-[a-zA-Z0-9.]+$/
  image: python:3-alpine
  before_script:
    # Get our own Swagger verifier
    - pip3 install pyyaml
    - wget https://raw.githubusercontent.com/mendersoftware/autodocs/master/verify_docs.py
  script:
    # Verify that the Swagger docs follow the autodeployment requirements
    - python3 verify_docs.py `find docs -name "*.yml"`

test:apidocs:verify-swagger:
  stage: test
  except:
    - /^saas-[a-zA-Z0-9.]+$/
  image: node:alpine
  script:
    # Verify that the Swagger docs are valid
    - npx @apidevtools/swagger-cli validate docs/*.yml

trigger:apidocs:rebuild-mender-api-docs:
  stage: .post
  variables:
    REBUILD_MENDER_API_DOCS: "false"
  rules:
    - changes:
      - docs/*
      if: '$CI_COMMIT_BRANCH =~ /^(master|staging|[0-9]+\.[0-9]+\.x)$/'
    - if: '$REBUILD_MENDER_API_DOCS == "true"'
  image: alpine
  before_script:
    - apk add git python3 py3-pip
    - pip3 install pyyaml
    - git clone https://github.com/mendersoftware/integration.git mender-integration
    - alias release_tool=$(realpath mender-integration/extra/release_tool.py)
    - apk add --no-cache curl
  script:
    # Enable the build of the mender-api-docs site versions where this branch is in use
    - BUILD_MASTER="false"
    - BUILD_HOSTED="false"
    # TODO: Find a way to set up BUILD_X.Y and pass it as curl parameters dynamically
    - BUILD_2_5="false"
    - for version in $(release_tool  --integration-versions-including ${CI_PROJECT_NAME} --version ${CI_COMMIT_REF_NAME} | cut -d"/" -f2); do
    -   if [ "${version}" == "master" ]; then
    -     BUILD_MASTER="true"
    -   elif [ "${version}" == "staging" ]; then
    -     BUILD_HOSTED="true"
    -   elif [ "${version}" == "2.5.x" ]; then
    -     BUILD_2_5="true"
    -   fi
    - done
    # Trigger the rebuilds (master + production) of mender-api-docs, if at least one of the build is enabled
    - if [ "${BUILD_MASTER}" != "false" ] || [ "${BUILD_HOSTED}" != "false" ] || [ "${BUILD_2_5}" != "false" ]; then
    -   echo "Triggering mender-api-docs rebuild (master ${BUILD_MASTER}, hosted ${BUILD_HOSTED}, 2.5 ${BUILD_2_5})"
    -   for ref in master production; do
    -     curl -v -f -X POST
            -F token=${MENDER_API_DOCS_TRIGGER_TOKEN}
            -F ref=$ref
            -F variables[BUILD_MASTER]=${BUILD_MASTER}
            -F variables[BUILD_HOSTED]=${BUILD_HOSTED}
            -F variables[BUILD_2_5]=${BUILD_2_5}
            https://gitlab.com/api/v4/projects/20356182/trigger/pipeline
    -   done
    - fi
